아이템 4. 인스턴스화를 막으려거든 private 생성자를 사용하라 

정적메서드와 정적 필드만을 담은 클래스는 다음과 같은 쓰임새를 같고 있다. 

1) 기본 타입 값이나 배열 관련 메서드들을 모아놓을 수 있다. 

2) 특정 인터페이스를 구현하는 객체를 생성해주는 정적 메서드 (혹은 팩터리)를 모아놓을 수 있다. 

3) final 클래스와 관련한 메서드들을 모아놓을 떄 사용한다. final 클래스를 상속해서 하위 클래스에 메서드를 넣는 건 불가능하기 때문이다. 

정적 멤버만 담은 유틸리티 클래스는 인스턴스로 만들어 쓰려고 설계한 게 아니다. 

private 생성자를 추가하면 클래스의 인스턴스화를 막을 수 있다. 

명시적 생성자가 private 이니 클래스 바깥에서는 접근할 수 없다. 
이 방식을 통해서 상속을 불가능하게 하는 효과가 있으며, 상위클래스의 생성자를 호출한다. 
생성자에 접근한 길이 막혀버린다. 

정리) 객체 생성의 인스턴스화를 막고 싶다면, 기본 생성자를 private 하게 명시적으로 선언하고, error를 던지는 방식을 활용하면 된다. 
